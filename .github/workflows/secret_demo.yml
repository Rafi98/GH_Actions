name: Secret Workflow

on:
  #push:
   # branches:
    #  - main
workflow_dispatch:
    inputs:
      my_value:
        description: 'My input value'
        required: true
        default: 'foo'
        type: string

jobs:
  my_job:
    name: "My job [my_value: ${{ github.event.inputs.my_value }}]"
    runs-on: ubuntu-latest
  
  ##workflow_dispatch:
    #inputs:
     # new_secret_value:
      #  description: 'New value for the secret'
       # required: true

#jobs:
  print-secrets:
   runs-on: ubuntu-latest
   steps:
      - name: Secret_Value
        env:
          MY_VAL: ${{ secrets.MY_SECRET }}
        run: |
          import os
          for q in (os.getenv("MY_VAL")):
            print(q)
        shell: python

  Install_gh_CLI:
    runs-on: ubuntu-latest
   
    steps:
    - name: Install gh CLI
      run: |
          # Install gh CLI
          sudo mkdir -p -m 755 /etc/apt/keyrings && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y
      
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GitHub
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh auth login --with-token <<<"${GH_TOKEN}"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: List contents of the directory
        run: ls -al

      - name: Clone repository using gh CLI
        run: |
          gh repo clone Rafi98/GH_Actions GH_Actions
          cd GH_Actions

      - name: Display URL Path
        run: |
          echo "Path of the remote URL: https://github.com/${{ github.repository }}/tree/${{ github.ref }}"

  encrypt_decrypt_secret:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install GPG
      - name: Install GPG
        run: sudo apt-get update && sudo apt-get install -y gnupg

        # Install OpenSSL
      - name: Install OpenSSL
        run: sudo apt-get update && sudo apt-get install -y openssl

  debugInputs:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Var1: ${{ github.event.inputs.var1 }}"
        echo "Var2: ${{ github.event.inputs.var2 }}" 


        

      # Decrypt the value
      #- name: Decrypt value
        #run: |
          # echo "${{ secrets.ENCRYPTED_VALUE }}" | base64 -d | openssl aes-256-cbc -d -pbkdf2 -md sha256 -pass pass:"${{ secrets.ENCRYPTION_KEY }}" > decrypted_value.txt
         #   echo "${{ secrets.MYS_SECRET }}" | base64 -d | openssl aes-256-cbc -d -pbkdf2 -md sha256 -pass pass:"${{ secrets.MY_SECRET }}" > decrypted_value.txt
      # Display the decrypted value
      #- name: Display decrypted value
       # run: cat decrypted_value.txt


       #echo -n "12345" | openssl enc -aes-256-cbc -a -salt -pass pass:"12345"

          

  
      #- name: Change in Secret Value
       # run: |
        #  gh secret list
                         
          # Retrieve and list existing secrets
          #gh secret list --json | jq -r '.[] | "\(.name): \(.value)"'
          
          # Update the secret with the new value
          #gh secret set -R Rafi98/GH_Actions MY_SECRET -b 'Eleven'

          #gh secret set MY_SECRET -b 'NINE'

          

        
      - name: Display Changed Secret_Value
        env:
          MY_VAL: ${{ secrets.MY_SECRET }}
        run: |
          import os
          for q in (os.getenv("MY_VAL")):
            print(q)
        shell: python

  
